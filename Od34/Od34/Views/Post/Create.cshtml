@model Od34.Entity.Post

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.meta_title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.meta_title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.meta_title, "", new { @class = "text-danger" })
            </div>
        </div>

        @*@Html.DevExpress().UploadControl(settings =>
            {
                settings.Name = "UploadControl";
                settings.ShowAddRemoveButtons = true;
                settings.ShowProgressPanel = true;
                settings.ShowClearFileSelectionButton = true;
                settings.ShowUploadButton = true;
                settings.Size = 30;
            }).GetHtml()*@
        <div class="form-group">
            @Html.LabelFor(model => model.header_image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DevExpress().UploadControl(settings =>
            {
                settings.Name = "UploadControl";
                //settings.CallbackRouteValues = new { Controller = "Post", Action = "UploadControlUpload" };

                //settings.UploadMode = UploadControlUploadMode.Standard;

                settings.AdvancedModeSettings.EnableDragAndDrop = true;
                //settings.AdvancedModeSettings.EnableMultiSelect = false;

                settings.ShowUploadButton = false;
                settings.ShowProgressPanel = false;

                settings.ValidationSettings.Assign(Od34.Controllers.PostControllerUploadControlSettings.UploadValidationSettings);
            }).GetHtml()
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.meta_description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.meta_description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.meta_description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.post_body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Action("HtmlEditorPartial")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.post_body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.post_body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.post_body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
